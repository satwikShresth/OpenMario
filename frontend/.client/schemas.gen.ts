// This file is auto-generated by @hey-api/openapi-ts

export const BookSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'integer',
            minimum: -9007199254740991,
            maximum: 9007199254740991
        },
        author_id: {
            type: 'integer',
            minimum: -9007199254740991,
            maximum: 9007199254740991
        },
        title: {
            type: 'string'
        },
        pub_year: {
            type: 'string',
            maxLength: 4
        },
        genre: {
            type: 'string'
        }
    },
    required: ['id', 'author_id', 'title', 'pub_year', 'genre'],
    description: 'A book record with all its properties',
    title: 'Book'
} as const;

export const BookCreateSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'integer',
            minimum: -9007199254740991,
            maximum: 9007199254740991
        },
        author_id: {
            type: 'integer',
            minimum: -9007199254740991,
            maximum: 9007199254740991
        },
        title: {
            type: 'string',
            minLength: 1,
            maxLength: 200,
            description: 'The title of the book',
            example: 'The Great Gatsby'
        },
        pub_year: {
            type: 'string',
            maxLength: 4,
            pattern: '^\\d{4}$',
            description: 'The year the book was published',
            example: '2023'
        },
        genre: {
            type: 'string',
            minLength: 1,
            description: 'The genre of the book',
            example: 'Fiction',
            enum: ['Fiction', 'Non-Fiction', 'Mystery', 'Science Fiction', 'Fantasy', 'Romance', 'Thriller', 'Horror', 'Biography', 'History', 'Science', 'Poetry', 'Drama', 'Children']
        },
        author_name: {
            type: 'string',
            minLength: 1,
            maxLength: 100,
            pattern: "^[a-zA-Z\\s\\-'\\p{L}\\p{M}]+$",
            description: "The name of the book's author",
            example: 'John Doe'
        },
        author_bio: {
            type: 'string',
            nullable: true,
            maxLength: 1000,
            description: 'Optional biography of the author',
            example: 'An accomplished writer with multiple bestsellers'
        }
    },
    required: ['title', 'pub_year', 'genre', 'author_name'],
    additionalProperties: false,
    description: 'Schema for creating a new book record',
    title: 'BookCreate'
} as const;

export const BookUpdateSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'integer',
            minimum: -9007199254740991,
            maximum: 9007199254740991
        },
        author_id: {
            type: 'integer',
            minimum: -9007199254740991,
            maximum: 9007199254740991
        },
        title: {
            type: 'string',
            minLength: 1,
            maxLength: 200,
            description: 'The title of the book',
            example: 'The Great Gatsby'
        },
        pub_year: {
            type: 'string',
            maxLength: 4,
            pattern: '^\\d{4}$',
            description: 'The year the book was published',
            example: '2023'
        },
        genre: {
            type: 'string',
            minLength: 1,
            description: 'The genre of the book',
            example: 'Fiction',
            enum: ['Fiction', 'Non-Fiction', 'Mystery', 'Science Fiction', 'Fantasy', 'Romance', 'Thriller', 'Horror', 'Biography', 'History', 'Science', 'Poetry', 'Drama', 'Children']
        },
        author_name: {
            type: 'string',
            minLength: 1,
            maxLength: 100,
            pattern: "^[a-zA-Z\\s\\-'\\p{L}\\p{M}]+$",
            description: "The updated name of the book's author",
            example: 'Jane Smith'
        },
        author_bio: {
            type: 'string',
            nullable: true,
            maxLength: 1000,
            description: 'Updated biography of the author',
            example: 'Award-winning author of contemporary fiction'
        }
    },
    additionalProperties: false,
    description: 'Schema for updating an existing book record',
    title: 'BookUpdate'
} as const;

export const AuthorSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'integer',
            minimum: -9007199254740991,
            maximum: 9007199254740991
        },
        name: {
            type: 'string'
        },
        bio: {
            type: 'string',
            nullable: true
        }
    },
    required: ['id', 'name', 'bio'],
    description: 'Complete author record with all properties',
    title: 'Author'
} as const;

export const AuthorCreateSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'integer',
            minimum: -9007199254740991,
            maximum: 9007199254740991
        },
        name: {
            type: 'string',
            minLength: 1,
            maxLength: 100,
            pattern: "^[a-zA-Z\\s\\-'\\p{L}\\p{M}]+$",
            description: "Author's full name",
            example: 'Jane Austen'
        },
        bio: {
            type: 'string',
            nullable: true,
            maxLength: 1000,
            description: "Author's biographical information",
            example: 'A renowned author known for her works in classic literature'
        }
    },
    required: ['name'],
    additionalProperties: false,
    description: 'Schema for creating a new author record',
    title: 'AuthorCreate'
} as const;

export const AuthorUpdateSchema = {
    type: 'object',
    properties: {
        id: {
            type: 'integer',
            minimum: -9007199254740991,
            maximum: 9007199254740991
        },
        name: {
            type: 'string',
            minLength: 1,
            maxLength: 100,
            pattern: "^[a-zA-Z\\s\\-'\\p{L}\\p{M}]+$",
            description: "Author's full name",
            example: 'Jane Austen'
        },
        bio: {
            type: 'string',
            nullable: true,
            maxLength: 1000,
            description: "Author's biographical information",
            example: 'A renowned author known for her works in classic literature'
        }
    },
    additionalProperties: false,
    description: 'Schema for updating an existing author record',
    title: 'AuthorUpdate'
} as const;
