import { create } from 'zustand';
import { getSubmissionsOptions } from '#client/react-query.gen';
import { createZustandContext } from 'zustand-context';
import { useQuery } from '@tanstack/react-query';

type SubmissionsStore = {
  skip: number;
  limit: number;
  setSkip: (skip: number) => void;
  setLimit: (limit: number) => void;
  resetPagination: () => void;
  submissionsQuery: ReturnType<typeof useQuery>;
};

const store = createZustandContext(
  (initialState: {
    initialSkip?: number,
    initialLimit?: number
  } = {}) =>
    create<SubmissionsStore>((set, get) => {
      const initialSkip = initialState.initialSkip ?? 0;
      const initialLimit = initialState.initialLimit ?? 10;

      const submissionsQuery = useQuery(
        {
          ...getSubmissionsOptions(
            { query: { skip: initialSkip, limit: initialLimit } }
          ),
          keepPreviousData: true
        }
      );

      return {
        skip: initialSkip,
        limit: initialLimit,
        submissionsQuery,
        setSkip: (skip) => {
          set({ skip });
          get().submissionsQuery.refetch();
        },
        setLimit: (limit) => {
          set({ limit });
          get().submissionsQuery.refetch();
        },
        resetPagination: () => {
          set({ skip: initialSkip, limit: initialLimit });
          get().submissionsQuery.refetch();
        },
      };
    })
);

export const SubmissionsProvider = store[0];
export default store[1];
