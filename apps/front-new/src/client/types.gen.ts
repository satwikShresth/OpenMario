// This file is auto-generated by @hey-api/openapi-ts

/**
 * JSON Web Token
 * Schema for JWT payload containing user authentication information
 */
export type JwtPayload = {
  /**
   * Unique identifier for the user
   */
  user_id: string
  /**
   * Username of the authenticated user
   */
  username: string
  /**
   * Username of the authenticated user
   */
  email: string
  /**
   * Issued at timestamp (in seconds since Unix epoch)
   */
  exp: number
}

export type Login = {
  email: string
}

export type Major = {
  id: string
  program_level: 'Undergraduate' | 'Graduate'
  name: string
}

export type Minor = {
  id: string
  program_level: 'Undergraduate' | 'Graduate'
  name: string
}

export type Location = {
  id: string
  state_code: string
  state: string
  city: string
}

export type CoopYear = '1st' | '2nd' | '3rd'

export type CoopCycle =
  | 'Fall/Winter'
  | 'Winter/Spring'
  | 'Spring/Summer'
  | 'Summer/Fall'

export type ProgramLevel = 'Undergraduate' | 'Graduate'

export type Company = {
  id: string
  name: string
  owner_id: string | null
}

export type CompanyInsert = {
  id?: string
  name: string
  owner_id?: string | null
}

export type Position = {
  id: string
  company_id: string
  name: string
  owner_id: string | null
}

export type PositionInsert = {
  id?: string
  company_id: string
  name: string
  owner_id?: string | null
}

export type CompanyPositionInsert = {
  company: string
  position: string
}

export type Submission = {
  id: string
  position_id: string
  location_id: string
  program_level: 'Undergraduate' | 'Graduate'
  work_hours: number
  coop_cycle: 'Fall/Winter' | 'Winter/Spring' | 'Spring/Summer' | 'Summer/Fall'
  coop_year: '1st' | '2nd' | '3rd'
  year: number
  compensation: number | null
  other_compensation: string | null
  details: string | null
  owner_id: string | null
  created_at: string
}

export type SubmissionAggregate = {
  company: string
  position: string
  location: string
  /**
   * Expected Work Hours
   */
  work_hours: number
  /**
   * Compensation amount
   */
  compensation: number
  other_compensation: string
  details: string
  year: number
  coop_year: '1st' | '2nd' | '3rd'
  coop_cycle: 'Fall/Winter' | 'Winter/Spring' | 'Spring/Summer' | 'Summer/Fall'
  program_level: 'Undergraduate' | 'Graduate'
}

export type SubmissionAggregateUpdate = {
  company: string
  position: string
  location: string
  /**
   * Expected Work Hours
   */
  work_hours: number
  /**
   * Compensation amount
   */
  compensation: number
  other_compensation: string
  details: string
  year: number
  coop_year: '1st' | '2nd' | '3rd'
  coop_cycle: 'Fall/Winter' | 'Winter/Spring' | 'Spring/Summer' | 'Summer/Fall'
  program_level: 'Undergraduate' | 'Graduate'
  id: string
}

export type SubmissionInsert = {
  id?: string
  position_id: string
  location_id: string
  program_level: 'Undergraduate' | 'Graduate'
  /**
   * Expected Work Hours
   */
  work_hours?: number
  coop_cycle: 'Fall/Winter' | 'Winter/Spring' | 'Spring/Summer' | 'Summer/Fall'
  coop_year: '1st' | '2nd' | '3rd'
  /**
   * Submission Year
   */
  year: number
  /**
   * Compensation amount
   */
  compensation?: number | null
  other_compensation?: string | null
  details?: string | null
  owner_id?: string | null
  created_at?: string
}

export type SubmissionMeIds = {
  ids?: Array<string>
}

export type SubmissionUpdate = {
  id?: string
  position_id?: string
  location_id?: string
  program_level?: 'Undergraduate' | 'Graduate'
  /**
   * Expected Work Hours
   */
  work_hours?: number
  coop_cycle?: 'Fall/Winter' | 'Winter/Spring' | 'Spring/Summer' | 'Summer/Fall'
  coop_year?: '1st' | '2nd' | '3rd'
  /**
   * Submission Year
   */
  year?: number
  /**
   * Compensation amount
   */
  compensation?: number | null
  other_compensation?: string | null
  details?: string | null
  owner_id?: string | null
  created_at?: string
}

export type SubmissionQuery = {
  company?: Array<string>
  position?: Array<string>
  location?: Array<string>
  year?: Array<number | null> | null
  coop_year?: Array<'1st' | '2nd' | '3rd'>
  coop_cycle?: Array<
    'Fall/Winter' | 'Winter/Spring' | 'Spring/Summer' | 'Summer/Fall'
  >
  program_level?: 'Undergraduate' | 'Graduate'
  pageIndex?: number | null
  pageSize?: number
  distinct?: boolean | null
}

export type SubmissionResponse = {
  id: string
  year: number
  coop_year: number
  coop_cycle: string
  program_level: string
  work_hours: number
  compensation: number
  other_compensation: string
  details: string
  position: string
  company: string
  location_city: string
  location_state: string
  location_state_code: string
}

export type GetAuthSearchTokenData = {
  body?: never
  path?: never
  query?: never
  url: '/auth/search-token'
}

export type PostAuthLoginData = {
  /**
   * User email
   */
  body: Login
  path?: never
  query?: never
  url: '/auth/login'
}

export type GetAuthLoginByTokenData = {
  body?: never
  path: {
    /**
     * Magic link token
     */
    token: string
  }
  query?: never
  url: '/auth/login/{token}'
}

export type GetAutocompleteCompanyData = {
  body?: never
  path?: never
  query: {
    /**
     * Search parameters for company name
     */
    comp: string
  }
  url: '/autocomplete/company'
}

export type GetAutocompleteCompanyErrors = {
  /**
   * Error response
   */
  409: {
    [key: string]: unknown
  }
}

export type GetAutocompleteCompanyError =
  GetAutocompleteCompanyErrors[keyof GetAutocompleteCompanyErrors]

export type GetAutocompleteCompanyResponses = {
  /**
   * List of matching company names
   */
  200: Array<string>
}

export type GetAutocompleteCompanyResponse =
  GetAutocompleteCompanyResponses[keyof GetAutocompleteCompanyResponses]

export type GetAutocompletePositionData = {
  body?: never
  path?: never
  query: {
    /**
     * Company name and optional position search term
     */
    comp: string
    /**
     * Company name and optional position search term
     */
    pos: string
  }
  url: '/autocomplete/position'
}

export type GetAutocompletePositionErrors = {
  /**
   * Error response
   */
  409: {
    [key: string]: unknown
  }
}

export type GetAutocompletePositionError =
  GetAutocompletePositionErrors[keyof GetAutocompletePositionErrors]

export type GetAutocompletePositionResponses = {
  /**
   * List of matching position titles
   */
  200: Array<string>
}

export type GetAutocompletePositionResponse =
  GetAutocompletePositionResponses[keyof GetAutocompletePositionResponses]

export type GetAutocompleteLocationData = {
  body?: never
  path?: never
  query: {
    /**
     * Search parameters for location
     */
    loc: string
  }
  url: '/autocomplete/location'
}

export type GetAutocompleteLocationErrors = {
  /**
   * Error response
   */
  409: {
    [key: string]: unknown
  }
}

export type GetAutocompleteLocationError =
  GetAutocompleteLocationErrors[keyof GetAutocompleteLocationErrors]

export type GetAutocompleteLocationResponses = {
  /**
   * List of matching locations in "City, State_Code" format
   */
  200: Array<string>
}

export type GetAutocompleteLocationResponse =
  GetAutocompleteLocationResponses[keyof GetAutocompleteLocationResponses]

export type GetCompanyPositionData = {
  body?: never
  path?: never
  query?: never
  url: '/company-position'
}

export type GetCompanyPositionErrors = {
  /**
   * Error response
   */
  409: {
    [key: string]: unknown
  }
}

export type GetCompanyPositionError =
  GetCompanyPositionErrors[keyof GetCompanyPositionErrors]

export type GetCompanyPositionResponses = {
  /**
   * Success response with user's companies and positions
   */
  200: {
    [key: string]: unknown
  }
}

export type GetCompanyPositionResponse =
  GetCompanyPositionResponses[keyof GetCompanyPositionResponses]

export type PostCompanyPositionData = {
  /**
   * Company and position data
   */
  body: CompanyPositionInsert
  path?: never
  query?: never
  url: '/company-position'
}

export type PostCompanyPositionErrors = {
  /**
   * Error response
   */
  409: {
    [key: string]: unknown
  }
}

export type PostCompanyPositionError =
  PostCompanyPositionErrors[keyof PostCompanyPositionErrors]

export type PostCompanyPositionResponses = {
  /**
   * Successfully created company and position
   */
  201: {
    [key: string]: unknown
  }
}

export type PostCompanyPositionResponse =
  PostCompanyPositionResponses[keyof PostCompanyPositionResponses]

export type GetSubmissionsData = {
  body?: never
  path?: never
  query?: never
  url: '/submissions'
}

export type PatchSubmissionsData = {
  body?: never
  path?: never
  query?: never
  url: '/submissions'
}

export type PostSubmissionsData = {
  body?: never
  path?: never
  query?: never
  url: '/submissions'
}

export type GetSubmissionsMeData = {
  body?: never
  path?: never
  query?: never
  url: '/submissions/me'
}

export type ClientOptions = {
  baseUrl: 'http://localhost:{port}/{basePath}' | (string & {})
}
