// This file is auto-generated by @hey-api/openapi-ts

export type SearchTokenResponse = {
   token: string;
};

export type TokenErrorResponse = {
   message: string;
   details: string;
};

export type ErrorResponse = {
   message: string;
};

export type CompanyCreateResponse = {
   company: {
      id: string;
      name: string;
      owner_id: string | null;
   };
   message: string;
};

export type CompanyInsert = {
   name: string;
};

export type PositionCreateResponse = {
   position: PositionItem;
   message: string;
};

export type PositionItem = {
   id: string;
   name: string;
   company_id: string;
   owner_id: string | null;
};

export type PositionInsert = {
   name: string;
   company: string;
};

export type SubmissionListResponse = {
   pageIndex: number;
   pageSize: number;
   count: number;
   data: Array<SubmissionListItem>;
};

export type SubmissionListItem = {
   year: number;
   coop_year: string;
   coop_cycle: string;
   program_level: string;
   work_hours: number;
   compensation: number;
   other_compensation: string | null;
   details: string | null;
   company: string;
   position: string;
   location_city: string;
   location_state: string;
   location_state_code: string;
};

export type SubmissionCreateResponse = {
   id: string;
   owner_id: string | null;
   message: string;
};

export type SubmissionAggregate = {
   company: string;
   position: string;
   location: string;
   work_hours: number;
   compensation: number;
   other_compensation: string;
   details: string;
   year: number;
   coop_year: '1st' | '2nd' | '3rd';
   coop_cycle: 'Fall/Winter' | 'Winter/Spring' | 'Spring/Summer' | 'Summer/Fall';
   program_level: 'Undergraduate' | 'Graduate';
};

export type SubmissionUpdateResponse = {
   message: string;
};

export type SubmissionAggregateUpdate = {
   company: string;
   position: string;
   location: string;
   work_hours: number;
   compensation: number;
   other_compensation: string;
   details: string;
   year: number;
   coop_year: '1st' | '2nd' | '3rd';
   coop_cycle: 'Fall/Winter' | 'Winter/Spring' | 'Spring/Summer' | 'Summer/Fall';
   program_level: 'Undergraduate' | 'Graduate';
   readonly id: string;
};

export type SubmissionMeResponse = {
   data: Array<SubmissionItem>;
};

export type SubmissionItem = {
   id: string;
   owner_id: string | null;
   year: number;
   coop_year: string;
   coop_cycle: string;
   program_level: string;
   work_hours: number;
   compensation: number;
   other_compensation: string | null;
   details: string | null;
   company: string;
   position: string;
   location_city: string;
   location_state: string;
   location_state_code: string;
   location: string;
};

export type CompanyListResponse = Array<CompanyResult>;

export type CompanyResult = {
   id: string;
   name: string;
};

export type PositionListResponse = Array<PositionResult>;

export type PositionResult = {
   id: string;
   name: string;
};

export type LocationListResponse = Array<LocationResult>;

export type LocationResult = {
   id: string;
   name: string;
};

export type GetV1AuthSearchTokenData = {
   body?: never;
   path?: never;
   query?: never;
   url: '/v1/auth/search-token';
};

export type GetV1AuthSearchTokenErrors = {
   /**
    * Unauthorized
    */
   401: TokenErrorResponse;
   /**
    * Conflict
    */
   409: ErrorResponse;
   /**
    * Internal server error
    */
   500: ErrorResponse;
};

export type GetV1AuthSearchTokenError =
   GetV1AuthSearchTokenErrors[keyof GetV1AuthSearchTokenErrors];

export type GetV1AuthSearchTokenResponses = {
   /**
    * Successfully generated tenant token
    */
   200: SearchTokenResponse;
};

export type GetV1AuthSearchTokenResponse =
   GetV1AuthSearchTokenResponses[keyof GetV1AuthSearchTokenResponses];

export type PostV1CompanyData = {
   body?: CompanyInsert;
   path?: never;
   query?: never;
   url: '/v1/company';
};

export type PostV1CompanyErrors = {
   /**
    * Error response - company creation failed
    */
   409: ErrorResponse;
};

export type PostV1CompanyError = PostV1CompanyErrors[keyof PostV1CompanyErrors];

export type PostV1CompanyResponses = {
   /**
    * Successfully created company
    */
   201: CompanyCreateResponse;
};

export type PostV1CompanyResponse = PostV1CompanyResponses[keyof PostV1CompanyResponses];

export type PostV1PositionData = {
   body?: PositionInsert;
   path?: never;
   query?: never;
   url: '/v1/position';
};

export type PostV1PositionErrors = {
   /**
    * Company not found
    */
   404: ErrorResponse;
   /**
    * Error response - position creation failed
    */
   409: ErrorResponse;
};

export type PostV1PositionError = PostV1PositionErrors[keyof PostV1PositionErrors];

export type PostV1PositionResponses = {
   /**
    * Successfully created position
    */
   201: PositionCreateResponse;
};

export type PostV1PositionResponse = PostV1PositionResponses[keyof PostV1PositionResponses];

export type GetV1SubmissionsData = {
   body?: never;
   path?: never;
   query: {
      company?: Array<string>;
      position?: Array<string>;
      location?: Array<string>;
      year?: Array<number>;
      coop_year?: Array<'1st' | '2nd' | '3rd'>;
      coop_cycle?: Array<'Fall/Winter' | 'Winter/Spring' | 'Spring/Summer' | 'Summer/Fall'>;
      program_level?: 'Undergraduate' | 'Graduate';
      sort: 'ASC' | 'DESC';
      sortField: 'company' | 'position' | 'location' | 'year' | 'coop_year' | 'salary';
      pageIndex?: number;
      pageSize?: number;
      distinct: boolean;
   };
   url: '/v1/submissions';
};

export type GetV1SubmissionsErrors = {
   /**
    * Error response
    */
   409: ErrorResponse;
};

export type GetV1SubmissionsError = GetV1SubmissionsErrors[keyof GetV1SubmissionsErrors];

export type GetV1SubmissionsResponses = {
   /**
    * Paginated list of submission records
    */
   200: SubmissionListResponse;
};

export type GetV1SubmissionsResponse = GetV1SubmissionsResponses[keyof GetV1SubmissionsResponses];

export type PatchV1SubmissionsData = {
   body?: SubmissionAggregateUpdate;
   path?: never;
   query?: never;
   url: '/v1/submissions';
};

export type PatchV1SubmissionsErrors = {
   /**
    * Error response
    */
   409: ErrorResponse;
};

export type PatchV1SubmissionsError = PatchV1SubmissionsErrors[keyof PatchV1SubmissionsErrors];

export type PatchV1SubmissionsResponses = {
   /**
    * Success
    */
   200: SubmissionListResponse;
   /**
    * Successfully updated submission
    */
   201: SubmissionUpdateResponse;
};

export type PatchV1SubmissionsResponse =
   PatchV1SubmissionsResponses[keyof PatchV1SubmissionsResponses];

export type PostV1SubmissionsData = {
   body?: SubmissionAggregate;
   path?: never;
   query?: never;
   url: '/v1/submissions';
};

export type PostV1SubmissionsErrors = {
   /**
    * Error response
    */
   409: ErrorResponse;
};

export type PostV1SubmissionsError = PostV1SubmissionsErrors[keyof PostV1SubmissionsErrors];

export type PostV1SubmissionsResponses = {
   /**
    * Successfully created submission
    */
   200: SubmissionCreateResponse;
   /**
    * Successfully created submission
    */
   201: SubmissionCreateResponse;
};

export type PostV1SubmissionsResponse =
   PostV1SubmissionsResponses[keyof PostV1SubmissionsResponses];

export type GetV1SubmissionsMeData = {
   body?: never;
   path?: never;
   query?: {
      ids?: Array<string>;
   };
   url: '/v1/submissions/me';
};

export type GetV1SubmissionsMeErrors = {
   /**
    * Error response
    */
   409: ErrorResponse;
};

export type GetV1SubmissionsMeError = GetV1SubmissionsMeErrors[keyof GetV1SubmissionsMeErrors];

export type GetV1SubmissionsMeResponses = {
   /**
    * List of user's submissions
    */
   200: SubmissionMeResponse;
};

export type GetV1SubmissionsMeResponse =
   GetV1SubmissionsMeResponses[keyof GetV1SubmissionsMeResponses];

export type GetV1AutocompleteCompanyData = {
   body?: never;
   path?: never;
   query: {
      comp: string;
   };
   url: '/v1/autocomplete/company';
};

export type GetV1AutocompleteCompanyErrors = {
   /**
    * Database query failed
    */
   409: ErrorResponse;
};

export type GetV1AutocompleteCompanyError =
   GetV1AutocompleteCompanyErrors[keyof GetV1AutocompleteCompanyErrors];

export type GetV1AutocompleteCompanyResponses = {
   /**
    * List of matching company names
    */
   200: CompanyListResponse;
};

export type GetV1AutocompleteCompanyResponse =
   GetV1AutocompleteCompanyResponses[keyof GetV1AutocompleteCompanyResponses];

export type GetV1AutocompletePositionData = {
   body?: never;
   path?: never;
   query: {
      comp: string;
      pos: string;
   };
   url: '/v1/autocomplete/position';
};

export type GetV1AutocompletePositionErrors = {
   /**
    * Database query failed
    */
   409: ErrorResponse;
};

export type GetV1AutocompletePositionError =
   GetV1AutocompletePositionErrors[keyof GetV1AutocompletePositionErrors];

export type GetV1AutocompletePositionResponses = {
   /**
    * List of matching position titles
    */
   200: PositionListResponse;
};

export type GetV1AutocompletePositionResponse =
   GetV1AutocompletePositionResponses[keyof GetV1AutocompletePositionResponses];

export type GetV1AutocompleteLocationData = {
   body?: never;
   path?: never;
   query: {
      loc: string;
   };
   url: '/v1/autocomplete/location';
};

export type GetV1AutocompleteLocationErrors = {
   /**
    * Database query failed
    */
   409: ErrorResponse;
};

export type GetV1AutocompleteLocationError =
   GetV1AutocompleteLocationErrors[keyof GetV1AutocompleteLocationErrors];

export type GetV1AutocompleteLocationResponses = {
   /**
    * List of matching locations in "City, State_Code" format
    */
   200: LocationListResponse;
};

export type GetV1AutocompleteLocationResponse =
   GetV1AutocompleteLocationResponses[keyof GetV1AutocompleteLocationResponses];

export type ClientOptions = {
   baseUrl: 'http://localhost:3000' | (string & {});
};
