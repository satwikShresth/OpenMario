/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as SubmissionImport } from "./routes/submission";
import { Route as HomeImport } from "./routes/home";
import { Route as IndexImport } from "./routes/index";
import { Route as SubmissionIndexImport } from "./routes/submission/index";
import { Route as HomeIndexImport } from "./routes/home/index";
import { Route as SubmissionNewImport } from "./routes/submission/new";
import { Route as SubmissionFormIdImport } from "./routes/submission/$formId";
import { Route as SubmissionEditFormIdImport } from "./routes/submission/edit.$formId";

// Create/Update Routes

const SubmissionRoute = SubmissionImport.update({
  id: "/submission",
  path: "/submission",
  getParentRoute: () => rootRoute,
} as any);

const HomeRoute = HomeImport.update({
  id: "/home",
  path: "/home",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const SubmissionIndexRoute = SubmissionIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => SubmissionRoute,
} as any);

const HomeIndexRoute = HomeIndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => HomeRoute,
} as any);

const SubmissionNewRoute = SubmissionNewImport.update({
  id: "/new",
  path: "/new",
  getParentRoute: () => SubmissionRoute,
} as any);

const SubmissionFormIdRoute = SubmissionFormIdImport.update({
  id: "/$formId",
  path: "/$formId",
  getParentRoute: () => SubmissionRoute,
} as any);

const SubmissionEditFormIdRoute = SubmissionEditFormIdImport.update({
  id: "/edit/$formId",
  path: "/edit/$formId",
  getParentRoute: () => SubmissionRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/home": {
      id: "/home";
      path: "/home";
      fullPath: "/home";
      preLoaderRoute: typeof HomeImport;
      parentRoute: typeof rootRoute;
    };
    "/submission": {
      id: "/submission";
      path: "/submission";
      fullPath: "/submission";
      preLoaderRoute: typeof SubmissionImport;
      parentRoute: typeof rootRoute;
    };
    "/submission/$formId": {
      id: "/submission/$formId";
      path: "/$formId";
      fullPath: "/submission/$formId";
      preLoaderRoute: typeof SubmissionFormIdImport;
      parentRoute: typeof SubmissionImport;
    };
    "/submission/new": {
      id: "/submission/new";
      path: "/new";
      fullPath: "/submission/new";
      preLoaderRoute: typeof SubmissionNewImport;
      parentRoute: typeof SubmissionImport;
    };
    "/home/": {
      id: "/home/";
      path: "/";
      fullPath: "/home/";
      preLoaderRoute: typeof HomeIndexImport;
      parentRoute: typeof HomeImport;
    };
    "/submission/": {
      id: "/submission/";
      path: "/";
      fullPath: "/submission/";
      preLoaderRoute: typeof SubmissionIndexImport;
      parentRoute: typeof SubmissionImport;
    };
    "/submission/edit/$formId": {
      id: "/submission/edit/$formId";
      path: "/edit/$formId";
      fullPath: "/submission/edit/$formId";
      preLoaderRoute: typeof SubmissionEditFormIdImport;
      parentRoute: typeof SubmissionImport;
    };
  }
}

// Create and export the route tree

interface HomeRouteChildren {
  HomeIndexRoute: typeof HomeIndexRoute;
}

const HomeRouteChildren: HomeRouteChildren = {
  HomeIndexRoute: HomeIndexRoute,
};

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren);

interface SubmissionRouteChildren {
  SubmissionFormIdRoute: typeof SubmissionFormIdRoute;
  SubmissionNewRoute: typeof SubmissionNewRoute;
  SubmissionIndexRoute: typeof SubmissionIndexRoute;
  SubmissionEditFormIdRoute: typeof SubmissionEditFormIdRoute;
}

const SubmissionRouteChildren: SubmissionRouteChildren = {
  SubmissionFormIdRoute: SubmissionFormIdRoute,
  SubmissionNewRoute: SubmissionNewRoute,
  SubmissionIndexRoute: SubmissionIndexRoute,
  SubmissionEditFormIdRoute: SubmissionEditFormIdRoute,
};

const SubmissionRouteWithChildren = SubmissionRoute._addFileChildren(
  SubmissionRouteChildren,
);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/home": typeof HomeRouteWithChildren;
  "/submission": typeof SubmissionRouteWithChildren;
  "/submission/$formId": typeof SubmissionFormIdRoute;
  "/submission/new": typeof SubmissionNewRoute;
  "/home/": typeof HomeIndexRoute;
  "/submission/": typeof SubmissionIndexRoute;
  "/submission/edit/$formId": typeof SubmissionEditFormIdRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/submission/$formId": typeof SubmissionFormIdRoute;
  "/submission/new": typeof SubmissionNewRoute;
  "/home": typeof HomeIndexRoute;
  "/submission": typeof SubmissionIndexRoute;
  "/submission/edit/$formId": typeof SubmissionEditFormIdRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/home": typeof HomeRouteWithChildren;
  "/submission": typeof SubmissionRouteWithChildren;
  "/submission/$formId": typeof SubmissionFormIdRoute;
  "/submission/new": typeof SubmissionNewRoute;
  "/home/": typeof HomeIndexRoute;
  "/submission/": typeof SubmissionIndexRoute;
  "/submission/edit/$formId": typeof SubmissionEditFormIdRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | "/"
    | "/home"
    | "/submission"
    | "/submission/$formId"
    | "/submission/new"
    | "/home/"
    | "/submission/"
    | "/submission/edit/$formId";
  fileRoutesByTo: FileRoutesByTo;
  to:
    | "/"
    | "/submission/$formId"
    | "/submission/new"
    | "/home"
    | "/submission"
    | "/submission/edit/$formId";
  id:
    | "__root__"
    | "/"
    | "/home"
    | "/submission"
    | "/submission/$formId"
    | "/submission/new"
    | "/home/"
    | "/submission/"
    | "/submission/edit/$formId";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  HomeRoute: typeof HomeRouteWithChildren;
  SubmissionRoute: typeof SubmissionRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HomeRoute: HomeRouteWithChildren,
  SubmissionRoute: SubmissionRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/home",
        "/submission"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/home": {
      "filePath": "home.tsx",
      "children": [
        "/home/"
      ]
    },
    "/submission": {
      "filePath": "submission.tsx",
      "children": [
        "/submission/$formId",
        "/submission/new",
        "/submission/",
        "/submission/edit/$formId"
      ]
    },
    "/submission/$formId": {
      "filePath": "submission/$formId.tsx",
      "parent": "/submission"
    },
    "/submission/new": {
      "filePath": "submission/new.tsx",
      "parent": "/submission"
    },
    "/home/": {
      "filePath": "home/index.tsx",
      "parent": "/home"
    },
    "/submission/": {
      "filePath": "submission/index.tsx",
      "parent": "/submission"
    },
    "/submission/edit/$formId": {
      "filePath": "submission/edit.$formId.tsx",
      "parent": "/submission"
    }
  }
}
ROUTE_MANIFEST_END */
